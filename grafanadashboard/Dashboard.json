{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "Table view of all vulnerabilities",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 2,
  "links": [],
  "panels": [
    {
      "datasource": {
        "default": true,
        "type": "influxdb",
        "uid": "ddxkv22pwpvk0b"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 50,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 20
              },
              {
                "color": "red",
                "value": 40
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 4,
        "x": 0,
        "y": 0
      },
      "id": 4,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": true,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "ddxkv22pwpvk0b"
          },
          "query": "import \"strings\"\r\n\r\n// Define the larger string or get it from a Grafana variable\r\npipelinenames = strings.split(v: \"${VulnerabilityPipelines:csv}\", t: \",\")\r\n\r\nfrom(bucket: \"GrypeScanResults\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"vulnerabilities\")\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> filter(fn: (r) => contains(value: r.pipeline, set: pipelinenames))\r\n  |> keep(columns: [\"_time\", \"severity\", \"name\", \"cvss_score\", \"cvss_vector\", \"data_source\", \"description\", \"fix_state\", \"fix_version\", \"type\", \"version\"])  // Keep relevant columns including tags\r\n  |> filter(fn: (r) => r.severity == \"Critical\")\r\n  |> filter(fn: (r) => if \"$IncludeWontFix\" == \"true\" then true else r.fix_state != \"wont-fix\")\r\n  |> group()\r\n  |> count(column: \"severity\") \r\n  |> yield(name: \"all_vulnerabilities\")",
          "refId": "A"
        }
      ],
      "title": "Critical Vulnerabilites",
      "type": "gauge"
    },
    {
      "datasource": {
        "default": true,
        "type": "influxdb",
        "uid": "ddxkv22pwpvk0b"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 60
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 4,
        "x": 4,
        "y": 0
      },
      "id": 3,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": true,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "ddxkv22pwpvk0b"
          },
          "query": "import \"strings\"\r\n\r\n// Define the larger string or get it from a Grafana variable\r\npipelinenames = strings.split(v: \"${VulnerabilityPipelines:csv}\", t: \",\")\r\n\r\nfrom(bucket: \"GrypeScanResults\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"vulnerabilities\")\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> filter(fn: (r) => contains(value: r.pipeline, set: pipelinenames))  \r\n  |> keep(columns: [\"_time\", \"severity\", \"name\", \"cvss_score\", \"cvss_vector\", \"data_source\", \"description\", \"fix_state\", \"fix_version\", \"type\", \"version\"])  // Keep relevant columns including tags\r\n  |> filter(fn: (r) => r.severity == \"High\")\r\n  |> filter(fn: (r) => if \"$IncludeWontFix\" == \"true\" then true else r.fix_state != \"wont-fix\")\r\n  |> group()\r\n  |> count(column: \"severity\") \r\n  |> yield(name: \"all_vulnerabilities\")",
          "refId": "A"
        }
      ],
      "title": "High Vulnerabilities",
      "type": "gauge"
    },
    {
      "datasource": {
        "default": true,
        "type": "influxdb",
        "uid": "ddxkv22pwpvk0b"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 60
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 4,
        "x": 8,
        "y": 0
      },
      "id": 5,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": true,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "ddxkv22pwpvk0b"
          },
          "query": "import \"strings\"\r\n\r\n// Define the larger string or get it from a Grafana variable\r\npipelinenames = strings.split(v: \"${VulnerabilityPipelines:csv}\", t: \",\")\r\n\r\nfrom(bucket: \"GrypeScanResults\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"vulnerabilities\")\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> filter(fn: (r) => contains(value: r.pipeline, set: pipelinenames))  \r\n  |> keep(columns: [\"_time\", \"severity\", \"name\", \"cvss_score\", \"cvss_vector\", \"data_source\", \"description\", \"fix_state\", \"fix_version\", \"type\", \"version\"])  // Keep relevant columns including tags\r\n  |> filter(fn: (r) => r.severity == \"Medium\")\r\n  |> filter(fn: (r) => if \"$IncludeWontFix\" == \"true\" then true else r.fix_state != \"wont-fix\")\r\n  |> group()\r\n  |> count(column: \"severity\") \r\n  |> yield(name: \"all_vulnerabilities\")",
          "refId": "A"
        }
      ],
      "title": "Medium Vulnerabilities",
      "type": "gauge"
    },
    {
      "datasource": {
        "default": true,
        "type": "influxdb",
        "uid": "ddxkv22pwpvk0b"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "pipeline"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 310
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 13,
        "w": 24,
        "x": 0,
        "y": 10
      },
      "id": 1,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "severity"
          }
        ]
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "ddxkv22pwpvk0b"
          },
          "query": "import \"strings\"\r\n\r\n// Define the larger string or get it from a Grafana variable\r\nnames2 = strings.split(v: \"${VulnerabilityPipelines:csv}\", t: \",\")\r\n\r\nfrom(bucket: \"GrypeScanResults\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"vulnerabilities\")\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> filter(fn: (r) => contains(value: r.pipeline, set: names2))\r\n  |> filter(fn: (r) => if \"$IncludeWontFix\" == \"true\" then true else r.fix_state != \"wont-fix\")\r\n  |> keep(columns: [\"pipeline\",\"_time\", \"severity\", \"name\", \"cvss_score\", \"cvss_vector\", \"data_source\", \"description\", \"fix_state\", \"fix_version\", \"type\", \"version\"])  // Keep relevant columns including tags\r\n  |> group()\r\n  |> yield(name: \"all_vulnerabilities\")\r\n",
          "refId": "A"
        }
      ],
      "title": "All vulnerablities",
      "type": "table"
    }
  ],
  "refresh": "",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": true,
          "text": [
            "DummyService"
          ],
          "value": [
            "DummyService"
          ]
        },
        "datasource": {
          "type": "influxdb",
          "uid": "ddxkv22pwpvk0b"
        },
        "definition": "from(bucket: \"GrypeScanResults\") \r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"vulnerabilities\")\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> keep(columns: [\"pipeline\"])  // Keep relevant columns including tags\r\n  |> group()\r\n  |> distinct(column: \"pipeline\")\r\n  |> yield(name: \"all_vulnerabilities\")",
        "hide": 0,
        "includeAll": false,
        "label": "Vulnerability Pipelines",
        "multi": true,
        "name": "VulnerabilityPipelines",
        "options": [],
        "query": {
          "query": "from(bucket: \"GrypeScanResults\") \r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"vulnerabilities\")\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> keep(columns: [\"pipeline\"])  // Keep relevant columns including tags\r\n  |> group()\r\n  |> distinct(column: \"pipeline\")\r\n  |> yield(name: \"all_vulnerabilities\")"
        },
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": "false",
          "value": "false"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Include won't fix",
        "multi": false,
        "name": "IncludeWontFix",
        "options": [
          {
            "selected": true,
            "text": "false",
            "value": "false"
          },
          {
            "selected": false,
            "text": "true",
            "value": "true"
          }
        ],
        "query": "false, true",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "isNone": true,
          "selected": false,
          "text": "None",
          "value": ""
        },
        "definition": "import \"strings\"\r\n\r\n// Define the larger string or get it from a Grafana variable\r\nnames2 = strings.split(v: \"${VulnerabilityPipelines:csv}\", t: \",\")",
        "hide": 2,
        "includeAll": false,
        "label": "Pipeline Names",
        "multi": false,
        "name": "pipelinenames",
        "options": [],
        "query": {
          "query": "import \"strings\"\r\n\r\n// Define the larger string or get it from a Grafana variable\r\nnames2 = strings.split(v: \"${VulnerabilityPipelines:csv}\", t: \",\")"
        },
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Vulnerability Results",
  "uid": "cdxoj5s8yw7i8b",
  "version": 34,
  "weekStart": ""
}