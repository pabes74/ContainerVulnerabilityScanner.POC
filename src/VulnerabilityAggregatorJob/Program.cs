using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using Microsoft.Extensions.Logging;
using OpenTelemetry;
using OpenTelemetry.Trace;
using OpenTelemetry.Resources;
using OpenTelemetry.Logs;
using Azure.Monitor.OpenTelemetry.Exporter;
using Azure.Monitor.OpenTelemetry.AspNetCore;

namespace VulnerabilityAggregatorJob
{
    public class Program
    {
        public static void Main(string[] args)
        {
            var builder = Host.CreateApplicationBuilder(args);
            var configuration = builder.Configuration;

            // Configure Application Insights instrumentation key
            string applicationInsightsConnectionString = configuration["ApplicationInsights:InstrumentationKey"];


            // Configure OpenTelemetry Tracing and Logging
            builder.Services.AddOpenTelemetry()
                .UseAzureMonitor(conf =>
                {
                    conf.ConnectionString = applicationInsightsConnectionString;
                }
            );

            // Configure OpenTelemetry Logging
            builder.Logging.ClearProviders();  // Clears the existing logging providers
            builder.Logging.AddOpenTelemetry(options =>
            {
                options.SetResourceBuilder(ResourceBuilder.CreateDefault().AddService("VulnerabilityAggregatorJob"));
                options.AddConsoleExporter();  // Export logs to console
                options.AddAzureMonitorLogExporter(o =>  // Export logs to Application Insights
                {
                    o.ConnectionString = applicationInsightsConnectionString;
                });
            });

            builder.Services.AddHostedService<AggregateWorker>();

            var host = builder.Build();
            host.Run();
        }
    }
}